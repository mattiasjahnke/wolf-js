let map=[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1],[1,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]];const lines=Array.from(document.getElementsByClassName("highcharts-point")),maxHeight=document.getElementsByClassName("highcharts-plot-background")[0].getAttribute("height"),maxWidth=document.getElementsByClassName("highcharts-plot-background")[0].getAttribute("width"),canvas=document.createElement("canvas"),mapWidth=map[0].length,mapHeight=map.length,kPlayerStart=20,kTable=11,miniMapScale=4,stripWidth=parseFloat(lines[0].getAttribute("d").split(" ")[7])-parseFloat(lines[0].getAttribute("d").split(" ")[1]);console.log(stripWidth);const viewportWidth=maxWidth,viewportHeight=maxHeight,playerRotationSpeed=2*Math.PI/180,playerMoveSpeed=.1;canvas.width=viewportWidth,canvas.height=viewportHeight;const ctx=canvas.getContext("2d"),fov=60*Math.PI/180,numRays=Math.min(lines.length,400),viewDist=viewportWidth/2/Math.tan(fov/2);lines.forEach((function(e,t,a){lines[t].setAttribute("d","")}));let fpsInterval,startTime,now,then,elapsed,displayMiniMap=!0,renderTexture=!1,rightPressed=!1,leftPressed=!1,upPressed=!1,downPressed=!1,player={x:0,y:0,dir:0,rot:0,speed:0};for(var y=0;y<mapHeight;y++)for(var x=0;x<mapWidth;x++)20==map[y][x]&&(player.x=x,player.y=y);const draw=()=>{requestAnimationFrame(draw),now=Date.now(),elapsed=now-then,elapsed>fpsInterval&&(then=now-elapsed%fpsInterval,handleKeyboardInput(),movePlayer(),drawMiniMap(),castRays())},drawMiniMap=()=>{ctx.fillStyle="rgba(0, 0, 0, 1)",ctx.fillRect(20,20,4*mapWidth,4*mapHeight),ctx.fillStyle="rgba(255, 255, 0, 1)";for(var e=0;e<mapHeight;e++)for(var t=0;t<mapWidth;t++){var a=map[e][t];a>0&&a<10&&ctx.fillRect(4*t+20,4*e+20,4,4)}},drawRay=(e,t)=>{ctx.beginPath(),ctx.strokeStyle="rgba(255, 255, 255, 0.2)",ctx.lineWidth=.1,ctx.moveTo(4*player.x+20,4*player.y+20),ctx.lineTo(4*e+20,4*t+20),ctx.stroke()},handleKeyboardInput=()=>{player.dir=rightPressed?1:leftPressed?-1:0,player.speed=upPressed?1:downPressed?-1:0},movePlayer=()=>{var e=.1*player.speed;player.rot+=player.dir*playerRotationSpeed;var t=player.x+Math.cos(player.rot)*e,a=player.y+Math.sin(player.rot)*e;isBlocking(t,a)||(player.x=t,player.y=a)},isBlocking=(e,t)=>{if(t<0||t>=mapHeight||e<0||e>=mapWidth)return!0;return 1===map[Math.floor(t)][Math.floor(e)]},castRays=()=>{for(var e=0,t=0;t<numRays;t++){var a=(-numRays/2+t)*stripWidth,r=Math.sqrt(a*a+viewDist*viewDist),i=Math.asin(a/r);castSingleRay(player.rot+i,e++)}},castSingleRay=(e,t)=>{(e%=2*Math.PI)<0&&(e+=2*Math.PI);const a=e>2*Math.PI*.75||e<2*Math.PI*.25,r=e<0||e>Math.PI,i=Math.sin(e),s=Math.cos(e);let n=[],l=0,o=0,p=0,d=0,h=i/s,y=a?1:-1,c=y*h,m=a?Math.ceil(player.x):Math.floor(player.x),g=player.y+(m-player.x)*h,x=null;for(;m>=0&&m<mapWidth&&g>=0&&g<mapHeight;){const r=Math.floor(m+(a?0:-1)),i=Math.floor(g);if(1===map[i][r]){const s=m-player.x,h=g-player.y;l=s*s+h*h,d=g%1,a||(d=1-d);const y={objIdx:map[i][r],stripIdx:t,rayAngle:e,dist:l,textureX:d,dark:!0};if(map[i][r]<10){o=m,p=g,x=y;break}n.push(y)}m+=y,g+=c}for(h=s/i,c=r?-1:1,y=c*h,g=r?Math.floor(player.y):Math.ceil(player.y),m=player.x+(g-player.y)*h;m>=0&&m<mapWidth&&g>=0&&g<mapHeight;){const a=Math.floor(g+(r?-1:0)),i=Math.floor(m);if(1===map[a][i]){const s=m-player.x,h=g-player.y;l=s*s+h*h,d=m%1,r&&(d=1-d);const y={objIdx:map[a][i],stripIdx:t,rayAngle:e,dist:l,textureX:d,dark:!0};if(map[a][i]<10){(null==x||x.dist>y.dist)&&(x=y,o=m,p=g);break}n.push(y)}m+=y,g+=c}var v,u;n=n.reverse(),n.unshift(x),displayMiniMap&&(v=o,u=p,ctx.beginPath(),ctx.strokeStyle="rgba(255, 255, 255, 0.2)",ctx.lineWidth=.1,ctx.moveTo(4*player.x+20,4*player.y+20),ctx.lineTo(4*v+20,4*u+20),ctx.stroke()),n.forEach((function(e,t,a){renderRayCollision(e)}))},renderRayCollision=e=>{const t=Math.sqrt(e.dist)*Math.cos(player.rot-e.rayAngle),a=Math.round(viewDist/t),r=Math.round((viewportHeight-a)/2),i=r+a,s=e.stripIdx;lines[s].setAttribute("opacity",""+a/maxHeight),lines[s].setAttribute("d",`M ${s*stripWidth+.5} ${r} L ${s*stripWidth+.5} ${i} L ${s*stripWidth+2.5} ${i} L ${s*stripWidth+2.5} ${r} Z`)},mapValue=(e,t,a,r,i)=>(e-t)*(i-r)/(a-t)+r,keyDownHandler=e=>{39==event.keyCode?rightPressed=!0:37==event.keyCode&&(leftPressed=!0),40==event.keyCode?downPressed=!0:38==event.keyCode&&(upPressed=!0)},keyUpHandler=e=>{39==event.keyCode?rightPressed=!1:37==event.keyCode&&(leftPressed=!1),40==event.keyCode?downPressed=!1:38==event.keyCode&&(upPressed=!1)};function startAnimating(e){fpsInterval=1e3/e,then=Date.now(),startTime=then,draw()}document.addEventListener("keydown",keyDownHandler,!1),document.addEventListener("keyup",keyUpHandler,!1),startAnimating(60);
