let map=[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1],[1,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]];const lines=Array.from(document.getElementsByClassName("highcharts-point")),maxHeight=document.getElementsByClassName("highcharts-plot-background")[0].getAttribute("height"),mapWidth=map[0].length,mapHeight=map.length,kPlayerStart=20,kTable=11,miniMapScale=4,stripWidth=2,viewportWidth=1280,viewportHeight=maxHeight,playerRotationSpeed=2*Math.PI/180,playerMoveSpeed=.1,fov=60*Math.PI/180,numRays=lines.length,viewDist=640/Math.tan(fov/2);let fpsInterval,startTime,now,then,elapsed,displayMiniMap=!0,renderTexture=!1,rightPressed=!1,leftPressed=!1,upPressed=!1,downPressed=!1,player={x:0,y:0,dir:0,rot:0,speed:0};for(var y=0;y<mapHeight;y++)for(var x=0;x<mapWidth;x++)20==map[y][x]&&(player.x=x,player.y=y);const draw=()=>{requestAnimationFrame(draw),now=Date.now(),elapsed=now-then,elapsed>fpsInterval&&(then=now-elapsed%fpsInterval,handleKeyboardInput(),movePlayer(),castRays())},handleKeyboardInput=()=>{player.dir=rightPressed?1:leftPressed?-1:0,player.speed=upPressed?1:downPressed?-1:0},movePlayer=()=>{var e=.1*player.speed;player.rot+=player.dir*playerRotationSpeed;var t=player.x+Math.cos(player.rot)*e,a=player.y+Math.sin(player.rot)*e;isBlocking(t,a)||(player.x=t,player.y=a)},isBlocking=(e,t)=>t<0||t>=mapHeight||e<0||e>=mapWidth||0!=map[Math.floor(t)][Math.floor(e)],castRays=()=>{for(var e=0,t=0;t<numRays;t++){var a=2*(-numRays/2+t),r=Math.sqrt(a*a+viewDist*viewDist),s=Math.asin(a/r);castSingleRay(player.rot+s,e++)}},castSingleRay=(e,t)=>{(e%=2*Math.PI)<0&&(e+=2*Math.PI);const a=e>2*Math.PI*.75||e<2*Math.PI*.25,r=e<0||e>Math.PI,s=Math.sin(e),n=Math.cos(e);let o=[],l=0,p=0,i=0,d=0,y=s/n,h=a?1:-1,m=h*y,v=a?Math.ceil(player.x):Math.floor(player.x),M=player.y+(v-player.x)*y,c=null;for(;v>=0&&v<mapWidth&&M>=0&&M<mapHeight;){const r=Math.floor(v+(a?0:-1)),s=Math.floor(M);if(map[s][r]>0&&20!=map[s][r]){const n=v-player.x,y=M-player.y;l=n*n+y*y,d=M%1,a||(d=1-d);const h={objIdx:map[s][r],stripIdx:t,rayAngle:e,dist:l,textureX:d,dark:!0};if(map[s][r]<10){p=v,i=M,c=h;break}o.push(h)}v+=h,M+=m}for(y=n/s,m=r?-1:1,h=m*y,M=r?Math.floor(player.y):Math.ceil(player.y),v=player.x+(M-player.y)*y;v>=0&&v<mapWidth&&M>=0&&M<mapHeight;){const a=Math.floor(M+(r?-1:0)),s=Math.floor(v);if(map[a][s]>0&&20!=map[a][s]){const n=v-player.x,y=M-player.y;l=n*n+y*y,d=v%1,r&&(d=1-d);const h={objIdx:map[a][s],stripIdx:t,rayAngle:e,dist:l,textureX:d,dark:!0};if(map[a][s]<10){(null==c||c.dist>h.dist)&&(c=h,p=v,i=M);break}o.push(h)}v+=h,M+=m}o=o.reverse(),o.unshift(c),o.forEach((function(e,t,a){renderRayCollision(e)}))},renderRayCollision=e=>{const t=Math.sqrt(e.dist)*Math.cos(player.rot-e.rayAngle),a=Math.round(viewDist/t),r=Math.round((viewportHeight-a)/2),s=r+a,n=e.stripIdx;lines[n].setAttribute("d",`M ${4*n+.5} ${r} L ${4*n+.5} ${s} L ${4*n+2.5} ${s} L ${4*n+2.5} ${r} Z`)},mapValue=(e,t,a,r,s)=>(e-t)*(s-r)/(a-t)+r,keyDownHandler=e=>{39==event.keyCode?rightPressed=!0:37==event.keyCode&&(leftPressed=!0),40==event.keyCode?downPressed=!0:38==event.keyCode&&(upPressed=!0)},keyUpHandler=e=>{39==event.keyCode?rightPressed=!1:37==event.keyCode&&(leftPressed=!1),40==event.keyCode?downPressed=!1:38==event.keyCode&&(upPressed=!1)};function startAnimating(e){fpsInterval=1e3/e,then=Date.now(),startTime=then,draw()}document.addEventListener("keydown",keyDownHandler,!1),document.addEventListener("keyup",keyUpHandler,!1),startAnimating(60);
